generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Ceep {
  id                  String   @id @default(uuid()) @db.Uuid
  cnpj                String   @db.VarChar(14)
  corporateName       String
  sanctionDescription String
  sanctionDate        DateTime
  leeniencyAgreement  Boolean
  disagreementDeal    Boolean
}

model benefitBolsaFamilia {
  transferredValue Int
  socialProgram    Int
  id               String @id @default(uuid()) @db.Uuid
}

model federalGovernmentPaymentCard {
  id                         String   @id @default(uuid()) @db.Uuid
  superiorDepartmentBodyCode Int
  superiorDepartmentBodyName String
  departmentBodyCode         Int
  deparmentBodyName          String
  managementUnitCode         Int
  managementUnitName         String
  year                       String
  month                      Int
  holderCpf                  String
  holderName                 String
  beneficiaryCpfCnpj         String
  beneficiaryName            String
  transaction                String
  transactionDate            DateTime
  transactionValue           Int
}

model federalGovernmentPaymentCard_centralizedPurchasing {
  id                         String   @id @default(uuid()) @db.Uuid
  superiorDepartmentBodyCode Int
  superiorDepartmentBodyName String
  departmentBodyCode         Int
  deparmentBodyName          String
  managementUnitCode         Int
  managementUnitName         String
  year                       String
  month                      Int
  acquisitionType            String
  beneficiaryCpfCnpj         String
  beneficiaryName            String
  transaction                String
  transactionDate            DateTime
  transactionValue           Int
}

model civilDefensePaymentCard {
  id                         String   @id @default(uuid()) @db.Uuid
  superiorDepartmentBodyCode Int
  superiorDepartmentBodyName String
  departmentBodyCode         Int
  deparmentBodyName          String
  managementUnitCode         Int
  managementUnitName         String
  year                       String
  month                      Int
  holderCpf                  String
  holderName                 String
  beneficiaryCpfCnpj         String
  beneficiaryName            String
  expenseExecutor            String
  agreementNumber            Int
  agreementCode              Int
  agreementName              String
  transfer                   String
  transaction                String
  transactionDate            DateTime
  transactionValue           Int
}

// Acordos de Leniência - Controladoria-Geral da União
model leniencyAgreements {
  id                          String   @id @default(uuid()) @db.Uuid
  year                        Int
  company                     String
  agreedValue                 Int
  agreementsAnnexesAmendments String[]
}

// TCU Penalidades por faltas cometidas em certames e na execução de contratos
model contractExecutionsAndCompetitionsPenalties {
  id                        String @id @default(uuid()) @db.Uuid
  year                      Int
  auction                   String
  process                   String
  cnpj                      String
  bidder                    String
  object                    String
  behavior                  String
  biddingImpedimentInMonths Int
  fine                      Int
}

//TCU Licitações e Contratos
model tendersAndContracts {
  id                  String   @id @default(uuid()) @db.Uuid
  contractualTerm     String
  supplier            String
  object              String
  supervisionUnits    String
  signatureDate       DateTime
  validityDateStart   DateTime
  validityDateEnd     DateTime
  extendable          Boolean
  maximumValidityDate DateTime
  initialValue        Int
  updatedTotalValue   Int
  biddingType         String
  biddingNumber       Int
  biddingYear         Int
  originProcess       String
}
